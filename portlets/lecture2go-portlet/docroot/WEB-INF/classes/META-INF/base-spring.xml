<?xml version="1.0"?>
<!--
  License
  
  +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++
  
  Lecture2Go 
  
  The Lecture2Go software is based on the liferay portal 6.2-ga6
  <http://www.liferay.com> (Copyright notice see below)
  Lecture2Go <http://lecture2go.uni-hamburg.de> is an open source
  platform for media management and distribution. Our goal is to
  support the free access to knowledge because this is a component
  of each democratic society. The open source software is aimed at
  academic institutions and has to strengthen the blended learning.
  All Lecture2Go plugins are continuously being developed and improved.
  For more details please visit <http://lecture2go-open-source.rrz.uni-hamburg.de>
  Copyright (c) 2013 - present University of Hamburg / Computer and Data Center (RRZ)
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.
  You should have received a copy of the GNU General Public License
  along with this program. If not, see <http://www.gnu.org/licenses/>.
   
  +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++
  
  The Liferay Plugins SDK:
  
  Copyright (c) 2000-present Liferay, Inc. All rights reserved.
  This library is free software; you can redistribute it and/or modify it under
  the terms of the GNU Lesser General Public License as published by the Free
  Software Foundation; either version 2.1 of the License, or (at your option)
  any later version.
  This library is distributed in the hope that it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
  details.
  
  +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++ +++
  
  Third Party Software
  
  Lecture2Go uses third-party libraries which may be distributed under different licenses
  to the above (but are compatible with the used GPL license). Informations about these
  licenses and copyright informations are mostly detailed in the library source code or jars themselves.
  You must agree to the terms of these licenses, in addition tothe above Lecture2Go source code license,
  in order to use this software.
-->
<beans
	default-destroy-method="destroy"
	default-init-method="afterPropertiesSet"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
>
	<bean class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.spring.aop.ServiceBeanAutoProxyCreator" />
		<constructor-arg>
			<map>
				<entry key="beanMatcher">
					<bean class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
						<constructor-arg value="com.liferay.portal.spring.aop.ServiceBeanMatcher" />
					</bean>
				</entry>
				<entry key="methodInterceptor" value-ref="serviceAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.spring.bean.BeanReferenceAnnotationBeanPostProcessor" />
	</bean>
	<bean class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.spring.context.PortletBeanFactoryCleaner" />
	</bean>
	<bean id="portletClassLoader" class="com.liferay.portal.kernel.portlet.PortletClassLoaderUtil" factory-method="getClassLoader" />
	<bean id="servletContextName" class="com.liferay.portal.kernel.portlet.PortletClassLoaderUtil" factory-method="getServletContextName" />
	<bean id="basePersistence" abstract="true">
		<property name="dataSource" ref="liferayDataSource" />
		<property name="sessionFactory" ref="liferaySessionFactory" />
	</bean>
	<bean id="serviceAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.spring.aop.SkipAdvice" />
		<constructor-arg>
			<map>
				<entry key="nextMethodInterceptor" value-ref="accessControlAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="accessControlAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.security.ac.AccessControlAdvice" />
		<constructor-arg>
			<map>
				<entry key="accessControlAdvisor">
					<bean class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
						<constructor-arg value="com.liferay.portal.security.ac.AccessControlAdvisorImpl" />
					</bean>
				</entry>
				<entry key="nextMethodInterceptor" value-ref="portalResiliencyAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="portalResiliencyAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.resiliency.service.PortalResiliencyAdvice" />
		<constructor-arg>
			<map>
				<entry key="nextMethodInterceptor" value-ref="serviceMonitorAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="serviceMonitorAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.monitoring.statistics.service.ServiceMonitorAdvice" />
		<constructor-arg>
			<map>
				<entry key="nextMethodInterceptor" value-ref="asyncAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="asyncAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.messaging.async.AsyncAdvice" />
		<constructor-arg>
			<map>
				<entry key="defaultDestinationName" value="liferay/async_service" />
				<entry key="nextMethodInterceptor" value-ref="threadLocalCacheAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="threadLocalCacheAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.cache.ThreadLocalCacheAdvice" />
		<constructor-arg>
			<map>
				<entry key="nextMethodInterceptor" value-ref="bufferedIncrementAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="bufferedIncrementAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.increment.BufferedIncrementAdvice" />
		<constructor-arg>
			<map>
				<entry key="nextMethodInterceptor" value-ref="indexableAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="indexableAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.search.IndexableAdvice" />
		<constructor-arg>
			<map>
				<entry key="nextMethodInterceptor" value-ref="systemEventAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="systemEventAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.systemevent.SystemEventAdvice" />
		<constructor-arg>
			<map>
				<entry key="nextMethodInterceptor" value-ref="transactionAdvice" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="transactionAdvice" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.spring.transaction.TransactionInterceptorFactoryBean" />
		<constructor-arg>
			<map>
				<entry key="platformTransactionManager" value-ref="liferayTransactionManager" />
				<entry key="transactionAttributeSource" value-ref="transactionAttributeSource" />
			</map>
		</constructor-arg>
	</bean>
	<bean id="transactionAttributeSource" class="com.liferay.portal.kernel.spring.util.SpringFactoryUtil" factory-method="newBean">
		<constructor-arg value="com.liferay.portal.spring.transaction.AnnotationTransactionAttributeSource" />
	</bean>
</beans>
